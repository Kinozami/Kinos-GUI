local Kavo = {}

local tween = game:GetService("TweenService")
local tweeninfo = TweenInfo.new
local input = game:GetService("UserInputService")
local run = game:GetService("RunService")

local Utility = {}
local Objects = {}
function Kavo:DraggingEnabled(frame, parent)
        
    parent = parent or frame
    
    -- stolen from wally or kiriot, kek
    local dragging = false
    local dragInput, mousePos, framePos

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = parent.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    input.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            parent.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
        end
    end)
end

function Utility:TweenObject(obj, properties, duration, ...)
    tween:Create(obj, tweeninfo(duration, ...), properties):Play()
end


local themes = {
    SchemeColor = Color3.fromRGB(74, 135, 99), -- Changed to green
    Background = Color3.fromRGB(36, 37, 43),
    Header = Color3.fromRGB(28, 29, 34),
    TextColor = Color3.fromRGB(255, 255, 255),
    ElementColor = Color3.fromRGB(32, 32, 38)
}
local themeStyles = {
    DarkTheme = {
        SchemeColor = Color3.fromRGB(64, 64, 64),
        Background = Color3.fromRGB(0, 0, 0),
        Header = Color3.fromRGB(0, 0, 0),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(20, 20, 20)
    },
    LightTheme = {
        SchemeColor = Color3.fromRGB(150, 150, 150),
        Background = Color3.fromRGB(255, 255, 255),
        Header = Color3.fromRGB(200, 200, 200),
        TextColor = Color3.fromRGB(0, 0, 0),
        ElementColor = Color3.fromRGB(224, 224, 224)
    },
    BloodTheme = {
        SchemeColor = Color3.fromRGB(227, 27, 27),
        Background = Color3.fromRGB(10, 10, 10),
        Header = Color3.fromRGB(5, 5, 5),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(20, 20, 20)
    },
    GrapeTheme = {
        SchemeColor = Color3.fromRGB(166, 71, 214),
        Background = Color3.fromRGB(64, 50, 71),
        Header = Color3.fromRGB(36, 28, 41),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(74, 58, 84)
    },
    Ocean = {
        SchemeColor = Color3.fromRGB(86, 76, 251),
        Background = Color3.fromRGB(26, 32, 58),
        Header = Color3.fromRGB(38, 45, 71),
        TextColor = Color3.fromRGB(200, 200, 200),
        ElementColor = Color3.fromRGB(38, 45, 71)
    },
    Midnight = {
        SchemeColor = Color3.fromRGB(26, 189, 158),
        Background = Color3.fromRGB(44, 62, 82),
        Header = Color3.fromRGB(57, 81, 105),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(52, 74, 95)
    },
    Sentinel = {
        SchemeColor = Color3.fromRGB(230, 35, 69),
        Background = Color3.fromRGB(32, 32, 32),
        Header = Color3.fromRGB(24, 24, 24),
        TextColor = Color3.fromRGB(119, 209, 138),
        ElementColor = Color3.fromRGB(24, 24, 24)
    },
    Synapse = {
        SchemeColor = Color3.fromRGB(46, 48, 43),
        Background = Color3.fromRGB(13, 15, 12),
        Header = Color3.fromRGB(36, 38, 35),
        TextColor = Color3.fromRGB(152, 99, 53),
        ElementColor = Color3.fromRGB(24, 24, 24)
    },
    Serpent = {
        SchemeColor = Color3.fromRGB(0, 166, 58),
        Background = Color3.fromRGB(31, 41, 43),
        Header = Color3.fromRGB(22, 29, 31),
        TextColor = Color3.fromRGB(255, 255, 255),
        ElementColor = Color3.fromRGB(22, 29, 31)
    }
}
local oldTheme = ""

local SettingsT = {

}

local Name = "KavoConfig.JSON"

pcall(function()
    if not pcall(function() readfile(Name) end) then
        writefile(Name, game:service'HttpService':JSONEncode(SettingsT))
    end

    Settings = game:service'HttpService':JSONEncode(readfile(Name))
end)

local LibName = tostring(math.random(1, 100))..tostring(math.random(1, 50))..tostring(math.random(1, 100))

function Kavo:ToggleUI()
    if game.CoreGui[LibName].Enabled then
        game.CoreGui[LibName].Enabled = false
    else
        game.CoreGui[LibName].Enabled = true
    end
end

function Kavo.CreateLib(kavName, themeList)
    if not themeList then
        themeList = themes
    end
    if themeList == "DarkTheme" then
        themeList = themeStyles.DarkTheme
    elseif themeList == "LightTheme" then
        themeList = themeStyles.LightTheme
    elseif themeList == "BloodTheme" then
        themeList = themeStyles.BloodTheme
    elseif themeList == "GrapeTheme" then
        themeList = themeStyles.GrapeTheme
    elseif themeList == "Ocean" then
        themeList = themeStyles.Ocean
    elseif themeList == "Midnight" then
        themeList = themeStyles.Midnight
    elseif themeList == "Sentinel" then
        themeList = themeStyles.Sentinel
    elseif themeList == "Synapse" then
        themeList = themeStyles.Synapse
    elseif themeList == "Serpent" then
        themeList = themeStyles.Serpent
    else
        if themeList.SchemeColor == nil then
            themeList.SchemeColor = Color3.fromRGB(74, 135, 99) -- Changed to green
        elseif themeList.Background == nil then
            themeList.Background = Color3.fromRGB(36, 37, 43)
        elseif themeList.Header == nil then
            themeList.Header = Color3.fromRGB(28, 29, 34)
        elseif themeList.TextColor == nil then
            themeList.TextColor = Color3.fromRGB(255, 255, 255)
        elseif themeList.ElementColor == nil then
            themeList.ElementColor = Color3.fromRGB(32, 32, 38)
        end
    end

    themeList = themeList or {}
    local selectedTab 
    kavName = kavName or "Library"
    table.insert(Kavo, kavName)
    for i,v in pairs(game.CoreGui:GetChildren()) do
        if v:IsA("ScreenGui") and v.Name == kavName then
            v:Destroy()
        end
    end
    local ScreenGui = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local MainCorner = Instance.new("UICorner")
    local MainHeader = Instance.new("Frame")
    local headerCover = Instance.new("UICorner")
    local coverup = Instance.new("Frame")
    local title = Instance.new("TextLabel")
    local close = Instance.new("ImageButton")
    local MainSide = Instance.new("Frame")
    local sideCorner = Instance.new("UICorner")
    local coverup_2 = Instance.new("Frame")
    local tabFrames = Instance.new("Frame")
    local tabListing = Instance.new("UIListLayout")
    local pages = Instance.new("Frame")
    local Pages = Instance.new("Folder")
    local infoContainer = Instance.new("Frame")

    local blurFrame = Instance.new("Frame")

    Kavo:DraggingEnabled(MainHeader, Main)

    blurFrame.Name = "blurFrame"
    blurFrame.Parent = pages
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 1
    blurFrame.BorderSizePixel = 0
    blurFrame.Position = UDim2.new(-0.0222222228, 0, -0.0371747203, 0)
    blurFrame.Size = UDim2.new(0, 376, 0, 289)
    blurFrame.ZIndex = 999

    ScreenGui.Parent = game.CoreGui
    ScreenGui.Name = LibName
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false

    Main.Name = "Main"
    Main.Parent = ScreenGui
    Main.BackgroundColor3 = themeList.Background
    Main.ClipsDescendants = true
    Main.Position = UDim2.new(0.336503863, 0, 0.275485456, 0)
    Main.Size = UDim2.new(0, 525, 0, 318)

    MainCorner.CornerRadius = UDim.new(0, 4)
    MainCorner.Name = "MainCorner"
    MainCorner.Parent = Main

    MainHeader.Name = "MainHeader"
    MainHeader.Parent = Main
    MainHeader.BackgroundColor3 = themeList.Header
    Objects[MainHeader] = "BackgroundColor3"
    MainHeader.Size = UDim2.new(0, 525, 0, 29)
    headerCover.CornerRadius = UDim.new(0, 4)
    headerCover.Name = "headerCover"
    headerCover.Parent = MainHeader

    coverup.Name = "coverup"
    coverup.Parent = MainHeader
    coverup.BackgroundColor3 = themeList.Header
    Objects[coverup] = "BackgroundColor3"
    coverup.BorderSizePixel = 0
    coverup.Position = UDim2.new(0, 0, 0.758620679, 0)
    coverup.Size = UDim2.new(0, 525, 0, 7)

    title.Name = "title"
    title.Parent = MainHeader
    title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    title.BackgroundTransparency = 1.000
    title.BorderSizePixel = 0
    title.Position = UDim2.new(0.0171428565, 0, 0.344827592, 0)
    title.Size = UDim2.new(0, 204, 0, 8)
    title.Font = Enum.Font.Gotham
    title.RichText = true
    title.Text = kavName
    title.TextColor3 = Color3.fromRGB(245, 245, 245)
    title.TextSize = 16.000
    title.TextXAlignment = Enum.TextXAlignment.Left

    close.Name = "close"
    close.Parent = MainHeader
    close.BackgroundTransparency = 1.000
    close.Position = UDim2.new(0.949999988, 0, 0.137999997, 0)
    close.Size = UDim2.new(0, 21, 0, 21)
    close.ZIndex = 2
    close.Image = "rbxassetid://3926305904"
    close.ImageRectOffset = Vector2.new(284, 4)
    close.ImageRectSize = Vector2.new(24, 24)
    close.MouseButton1Click:Connect(function()
        game.TweenService:Create(close, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
            ImageTransparency = 1
        }):Play()
        wait()
        game.TweenService:Create(Main, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            Size = UDim2.new(0,0,0,0),
            Position = UDim2.new(0, Main.AbsolutePosition.X + (Main.AbsoluteSize.X / 2), 0, Main.AbsolutePosition.Y + (Main.AbsoluteSize.Y / 2))
        }):Play()
        wait(1)
        ScreenGui:Destroy()
    end)

    MainSide.Name = "MainSide"
    MainSide.Parent = Main
    MainSide.BackgroundColor3 = themeList.Header
    Objects[MainSide] = "Header"
    MainSide.Position = UDim2.new(-7.4505806e-09, 0, 0.0911949649, 0)
    MainSide.Size = UDim2.new(0, 149, 0, 289)

    sideCorner.CornerRadius = UDim.new(0, 4)
    sideCorner.Name = "sideCorner"
    sideCorner.Parent = MainSide

    coverup_2.Name = "coverup"
    coverup_2.Parent = MainSide
    coverup_2.BackgroundColor3 = themeList.Header
    Objects[coverup_2] = "Header"
    coverup_2.BorderSizePixel = 0
    coverup_2.Position = UDim2.new(0.949939311, 0, 0, 0)
    coverup_2.Size = UDim2.new(0, 7, 0, 289)

    tabFrames.Name = "tabFrames"
    tabFrames.Parent = MainSide
    tabFrames.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tabFrames.BackgroundTransparency = 1.000
    tabFrames.Position = UDim2.new(0.0438990258, 0, -0.00066378375, 0)
    tabFrames.Size = UDim2.new(0, 135, 0, 283)

    tabListing.Name = "tabListing"
    tabListing.Parent = tabFrames
    tabListing.SortOrder = Enum.SortOrder.LayoutOrder

    pages.Name = "pages"
    pages.Parent = Main
    pages.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    pages.BackgroundTransparency = 1.000
    pages.BorderSizePixel = 0
    pages.Position = UDim2.new(0.299047589, 0, 0.122641519, 0)
    pages.Size = UDim2.new(0, 360, 0, 269)

    Pages.Name = "Pages"
    Pages.Parent = pages

    infoContainer.Name = "infoContainer"
    infoContainer.Parent = Main
    infoContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    infoContainer.BackgroundTransparency = 1.000
    infoContainer.BorderColor3 = Color3.fromRGB(27, 42, 53)
    infoContainer.ClipsDescendants = true
    infoContainer.Position = UDim2.new(0.299047619, 0, 0.874213815, 0)
    infoContainer.Size = UDim2.new(0, 368, 0, 33)

    coroutine.wrap(function()
        while wait() do
            Main.BackgroundColor3 = themeList.Background
            MainHeader.BackgroundColor3 = themeList.Header
            MainSide.BackgroundColor3 = themeList.Header
            coverup_2.BackgroundColor3 = themeList.Header
            coverup.BackgroundColor3 = themeList.Header
        end
    end)()

    function Kavo:ChangeColor(prope, color)
        if prope == "Background" then
            themeList.Background = color
        elseif prope == "SchemeColor" then
            themeList.SchemeColor = color
        elseif prope == "Header" then
            themeList.Header = color
        elseif prope == "TextColor" then
            themeList.TextColor = color
        elseif prope == "ElementColor" then
            themeList.ElementColor = color
        end
    end
    local Tabs = {}

    local first = true

    function Tabs:NewTab(tabName)
        tabName = tabName or "Tab"
        local tabButton = Instance.new("TextButton")
        local UICorner = Instance.new("UICorner")
        local page = Instance.new("ScrollingFrame")
        local pageListing = Instance.new("UIListLayout")

        local function UpdateSize()
            local cS = pageListing.AbsoluteContentSize

            game.TweenService:Create(page, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                CanvasSize = UDim2.new(0, cS.X, 0, cS.Y)
            }):Play()
        end

        page.Name = "Page"
        page.Parent = Pages
        page.Active = true
        page.BackgroundColor3 = themeList.Background
        page.BorderSizePixel = 0
        page.Position = UDim2.new(0, 0, -0.00371747208, 0)
        page.Size = UDim2.new(1, 0, 1, 0)
        page.ScrollBarThickness =
        page.ScrollBarThickness = 5
        page.Visible = false
        page.ScrollBarImageColor3 = Color3.fromRGB(themeList.SchemeColor.r * 255 - 16, themeList.SchemeColor.g * 255 - 15, themeList.SchemeColor.b * 255 - 28)

        pageListing.Name = "pageListing"
        pageListing.Parent = page
        pageListing.SortOrder = Enum.SortOrder.LayoutOrder
        pageListing.Padding = UDim.new(0, 5)

        tabButton.Name = tabName.."TabButton"
        tabButton.Parent = tabFrames
        tabButton.BackgroundColor3 = themeList.SchemeColor
        Objects[tabButton] = "SchemeColor"
        tabButton.Size = UDim2.new(0, 135, 0, 28)
        tabButton.AutoButtonColor = false
        tabButton.Font = Enum.Font.Gotham
        tabButton.Text = tabName
        tabButton.TextColor3 = themeList.TextColor
        Objects[tabButton] = "TextColor3"
        tabButton.TextSize = 14.000
        tabButton.BackgroundTransparency = 1

        if first then
            first = false
            page.Visible = true
            tabButton.BackgroundTransparency = 0
            UpdateSize()
        else
            page.Visible = false
            tabButton.BackgroundTransparency = 1
        end

        UICorner.CornerRadius = UDim.new(0, 5)
        UICorner.Parent = tabButton
        table.insert(Tabs, tabName)

        UpdateSize()
        page.ChildAdded:Connect(UpdateSize)
        page.ChildRemoved:Connect(UpdateSize)

        tabButton.MouseButton1Click:Connect(function()
            UpdateSize()
            for i,v in next, Pages:GetChildren() do
                v.Visible = false
            end
            page.Visible = true
            for i,v in next, tabFrames:GetChildren() do
                if v:IsA("TextButton") then
                    if themeList.SchemeColor == Color3.fromRGB(255, 255, 255) then
                        Utility:TweenObject(v, {TextColor3 = Color3.fromRGB(255, 255, 255)}, 0.2)
                    end 
                    if themeList.SchemeColor == Color3.fromRGB(0, 0, 0) then
                        Utility:TweenObject(v, {TextColor3 = Color3.fromRGB(0, 0, 0)}, 0.2)
                    end
                    Utility:TweenObject(v, {BackgroundTransparency = 1}, 0.2)
                end
            end
            Utility:TweenObject(tabButton, {BackgroundTransparency = 0}, 0.2)
        end)

        local Elements = {}

        function Elements:NewButton(bname, tipInf, callback)
            local Button = Instance.new("TextButton")
            local UICorner = Instance.new("UICorner")

            Button.Name = bname
            Button.Parent = page
            Button.BackgroundColor3 = themeList.ElementColor
            Button.Size = UDim2.new(0, 335, 0, 30)
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.Gotham
            Button.Text = bname
            Button.TextColor3 = themeList.TextColor
            Button.TextSize = 14.000
            Button.MouseButton1Click:Connect(function()
                pcall(callback)
            end)

            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Button

            return Button
        end

        function Elements:NewTextBox(tname, tTip, callback)
            local TextBox = Instance.new("TextBox")
            local UICorner = Instance.new("UICorner")

            TextBox.Name = tname
            TextBox.Parent = page
            TextBox.BackgroundColor3 = themeList.ElementColor
            TextBox.Size = UDim2.new(0, 335, 0, 30)
            TextBox.Font = Enum.Font.Gotham
            TextBox.PlaceholderText = tTip
            TextBox.Text = ""
            TextBox.TextColor3 = themeList.TextColor
            TextBox.TextSize = 14.000
            TextBox.FocusLost:Connect(function()
                pcall(callback, TextBox.Text)
            end)

            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = TextBox

            return TextBox
        end

        function Elements:NewToggle(tname, nTip, callback)
            local Toggle = Instance.new("TextButton")
            local UICorner = Instance.new("UICorner")
            local ToggleFrame = Instance.new("Frame")
            local ToggleCircle = Instance.new("Frame")
            local UICorner_2 = Instance.new("UICorner")

            Toggle.Name = tname
            Toggle.Parent = page
            Toggle.BackgroundColor3 = themeList.ElementColor
            Toggle.Size = UDim2.new(0, 335, 0, 30)
            Toggle.AutoButtonColor = false
            Toggle.Font = Enum.Font.Gotham
            Toggle.Text = tname
            Toggle.TextColor3 = themeList.TextColor
            Toggle.TextSize = 14.000
            Toggle.MouseButton1Click:Connect(function()
                if ToggleFrame.BackgroundColor3 == Color3.fromRGB(255, 255, 255) then
                    ToggleFrame.BackgroundColor3 = themeList.SchemeColor
                    ToggleCircle.Position = UDim2.new(0, 2, 0, 2)
                else
                    ToggleFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    ToggleCircle.Position = UDim2.new(0, 18, 0, 2)
                end
                pcall(callback, ToggleFrame.BackgroundColor3 == themeList.SchemeColor)
            end)

            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Toggle

            ToggleFrame.Name = "ToggleFrame"
            ToggleFrame.Parent = Toggle
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleFrame.Position = UDim2.new(0.85, 0, 0.1, 0)
            ToggleFrame.Size = UDim2.new(0, 30, 0, 20)

            UICorner_2.CornerRadius = UDim.new(0, 4)
            UICorner_2.Parent = ToggleFrame

            ToggleCircle.Name = "ToggleCircle"
            ToggleCircle.Parent = ToggleFrame
            ToggleCircle.BackgroundColor3 = themeList.SchemeColor
            ToggleCircle.Position = UDim2.new(0, 2, 0, 2)
            ToggleCircle.Size = UDim2.new(0, 16, 0, 16)

            return Toggle
        end

        function Elements:NewSlider(slidInf, slidTip, maxvalue, minvalue, callback)
            local Slider = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local SliderButton = Instance.new("TextButton")
            local SliderBar = Instance.new("Frame")
            local SliderFill = Instance.new("Frame")
            local UICorner_2 = Instance.new("UICorner")
            local ValueText = Instance.new("TextLabel")

            Slider.Name = slidInf
            Slider.Parent = page
            Slider.BackgroundColor3 = themeList.ElementColor
            Slider.Size = UDim2.new(0, 335, 0, 30)

            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Slider

            SliderButton.Name = "SliderButton"
            SliderButton.Parent = Slider
            SliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderButton.BackgroundTransparency = 1.000
            SliderButton.Size = UDim2.new(1, 0, 1, 0)
            SliderButton.Font = Enum.Font.Gotham
            SliderButton.Text = slidInf
            SliderButton.TextColor3 = themeList.TextColor
            SliderButton.TextSize = 14.000
            SliderButton.TextXAlignment = Enum.TextXAlignment.Left

            SliderBar.Name = "SliderBar"
            SliderBar.Parent = Slider
            SliderBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SliderBar.BackgroundTransparency = 0.9
            SliderBar.Position = UDim2.new(0.3, 0, 0.5, 0)
            SliderBar.Size = UDim2.new(0.6, 0, 0.2, 0)

            SliderFill.Name = "SliderFill"
            SliderFill.Parent = SliderBar
            SliderFill.BackgroundColor3 = themeList.SchemeColor
            SliderFill.Size = UDim2.new(0.5, 0, 1, 0)

            UICorner_2.CornerRadius = UDim.new(0, 4)
            UICorner_2.Parent = SliderBar

            ValueText.Name = "ValueText"
            ValueText.Parent = Slider
            ValueText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ValueText.BackgroundTransparency = 1.000
            ValueText.Position = UDim2.new(0.85, 0, 0, 0)
            ValueText.Size = UDim2.new(0.15, 0, 1, 0)
            ValueText.Font = Enum.Font.Gotham
            ValueText.Text = tostring(math.floor((maxvalue + minvalue) / 2))
            ValueText.TextColor3 = themeList.TextColor
            ValueText.TextSize = 14.000
            ValueText.TextXAlignment = Enum.TextXAlignment.Right

            local function UpdateSlider(input)
                local pos = UDim2.new(math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1), 0, 1, 0)
                SliderFill:TweenSize(pos, "Out", "Sine", 0.1, true)
                local value = math.floor(minvalue + ((maxvalue - minvalue) * pos.X.Scale))
                ValueText.Text = tostring(value)
                pcall(callback, value)
            end

            SliderButton.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    UpdateSlider(input)
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)

            SliderButton.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    dragInput = input
                end
            end)

            input.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    UpdateSlider(input)
                end
            end)

            return Slider
        end

        function Elements:NewDropdown(dropname, dropinf, list, callback)
            local Dropdown = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local DropdownButton = Instance.new("TextButton")
            local DropdownList = Instance.new("ScrollingFrame")
            local UIListLayout = Instance.new("UIListLayout")

            Dropdown.Name = dropname
            Dropdown.Parent = page
            Dropdown.BackgroundColor3 = themeList.ElementColor
            Dropdown.ClipsDescendants = true
            Dropdown.Size = UDim2.new(0, 335, 0, 30)

            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Dropdown

            DropdownButton.Name = "DropdownButton"
            DropdownButton.Parent = Dropdown
            DropdownButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownButton.BackgroundTransparency = 1.000
            DropdownButton.Size = UDim2.new(1, 0, 1, 0)
            DropdownButton.Font = Enum.Font.Gotham
            DropdownButton.Text = dropname
            DropdownButton.TextColor3 = themeList.TextColor
            DropdownButton.TextSize = 14.000
            DropdownButton.TextXAlignment = Enum.TextXAlignment.Left
            DropdownButton.MouseButton1Click:Connect(function()
                DropdownList.Visible = not DropdownList.Visible
                Dropdown:TweenSize(UDim2.new(0, 335, 0, DropdownList.Visible and 150 or 30), "Out", "Sine", 0.2, true)
            end)

            DropdownList.Name = "DropdownList"
            DropdownList.Parent = Dropdown
            DropdownList.Active = true
            DropdownList.BackgroundColor3 = themeList.ElementColor
            DropdownList.BorderSizePixel = 0
            DropdownList.Position = UDim2.new(0, 0, 1, 0)
            DropdownList.Size = UDim2.new(1, 0, 5, 0)
            DropdownList.Visible = false
            DropdownList.CanvasSize = UDim2.new(0, 0, 0, 0)
            DropdownList.ScrollBarThickness = 5

            UIListLayout.Parent = DropdownList
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

            for i, v in pairs(list) do
                local Item = Instance.new("TextButton")
                Item.Parent = DropdownList
                Item.BackgroundColor3 = themeList.ElementColor
                Item.Size = UDim2.new(1, 0, 0, 30)
                Item.Font = Enum.Font.Gotham
                Item.Text = v
                Item.TextColor3 = themeList.TextColor
                Item.TextSize = 14.000
                Item.MouseButton1Click:Connect(function()
                    DropdownButton.Text = v
                    DropdownList.Visible = false
                    Dropdown:TweenSize(UDim2.new(0, 335, 0, 30), "Out", "Sine", 0.2, true)
                    pcall(callback, v)
                end)
            end

            return Dropdown
        end

        function Elements:NewKeybind(keytext, keyinf, first, callback)
            local Keybind = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local KeybindButton = Instance.new("TextButton")
            local KeybindLabel = Instance.new("TextLabel")

            Keybind.Name = keytext
            Keybind.Parent = page
            Keybind.BackgroundColor3 = themeList.ElementColor
            Keybind.Size = UDim2.new(0, 335, 0, 30)

            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Keybind

            KeybindButton.Name = "KeybindButton"
            KeybindButton.Parent = Keybind
            KeybindButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            KeybindButton.BackgroundTransparency = 1.000
            KeybindButton.Size = UDim2.new(1, 0, 1, 0)
            KeybindButton.Font = Enum.Font.Gotham
            KeybindButton.Text = keytext
            KeybindButton.TextColor3 = themeList.TextColor
            KeybindButton.TextSize = 14.000
            KeybindButton.TextXAlignment = Enum.TextXAlignment.Left

            KeybindLabel.Name = "KeybindLabel"
            KeybindLabel.Parent = Keybind
            KeybindLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            KeybindLabel.BackgroundTransparency = 1.000
            KeybindLabel.Position = UDim2.new(0.85, 0, 0, 0)
            KeybindLabel.Size = UDim2.new(0.15, 0, 1, 0)
            KeybindLabel.Font = Enum.Font.Gotham
            KeybindLabel.Text = first
            KeybindLabel.TextColor3 = themeList.TextColor
            KeybindLabel.TextSize = 14.000
            KeybindLabel.TextXAlignment = Enum.TextXAlignment.Right

            KeybindButton.MouseButton1Click:Connect(function()
                KeybindLabel.Text = "..."
                local inputConnection
                inputConnection = input.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.Keyboard then
                        KeybindLabel.Text = input.KeyCode.Name
                        pcall(callback, input.KeyCode)
                        inputConnection:Disconnect()
                    end
                end)
            end)

            return Keybind
        end

        function Elements:NewColorPicker(colText, colInf, defcolor, callback)
            local ColorPicker = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local ColorDisplay = Instance.new("Frame")
            local ColorButton = Instance.new("TextButton")
            local ColorPickerFrame = Instance.new("Frame")
            local ColorWheel = Instance.new("ImageLabel")
            local ColorWheelThumb = Instance.new("ImageLabel")
            local BrightnessBar = Instance.new("Frame")
            local BrightnessFill = Instance.new("Frame")
            local BrightnessThumb = Instance.new("ImageLabel")

            local hsv = {h = 0, s = 0, v = 0}

            ColorPicker.Name = colText
            ColorPicker.Parent = page
            ColorPicker.BackgroundColor3 = themeList.ElementColor
            ColorPicker.Size = UDim2.new(0, 335, 0, 30)

            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = ColorPicker

            ColorDisplay.Name = "ColorDisplay"
            ColorDisplay.Parent = ColorPicker
            ColorDisplay.BackgroundColor3 = defcolor
            ColorDisplay.Position = UDim2.new(0.85, 0, 0.1, 0)
            ColorDisplay.Size = UDim2.new(0, 30, 0, 20)

            ColorButton.Name = "ColorButton"
            ColorButton.Parent = ColorPicker
            ColorButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorButton.BackgroundTransparency = 1.000
            ColorButton.Size = UDim2.new(1, 0, 1, 0)
            ColorButton.Font = Enum.Font.Gotham
            ColorButton.Text = colText
            ColorButton.TextColor3 = themeList.TextColor
            ColorButton.TextSize = 14.000
            ColorButton.TextXAlignment = Enum.TextXAlignment.Left
            ColorButton.MouseButton1Click:Connect(function()
                ColorPickerFrame.Visible = not ColorPickerFrame
                ColorPickerFrame.Visible = not ColorPickerFrame.Visible
            end)

            ColorPickerFrame.Name = "ColorPickerFrame"
            ColorPickerFrame.Parent = ColorPicker
            ColorPickerFrame.BackgroundColor3 = themeList.ElementColor
            ColorPickerFrame.Position = UDim2.new(0, 0, 1, 0)
            ColorPickerFrame.Size = UDim2.new(1, 0, 0, 150)
            ColorPickerFrame.Visible = false

            local function updateColor()
                ColorDisplay.BackgroundColor3 = Color3.fromHSV(hsv.h, hsv.s, hsv.v)
                pcall(callback, ColorDisplay.BackgroundColor3)
            end

            ColorWheel.Name = "ColorWheel"
            ColorWheel.Parent = ColorPickerFrame
            ColorWheel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorWheel.BackgroundTransparency = 1.000
            ColorWheel.Position = UDim2.new(0.05, 0, 0.1, 0)
            ColorWheel.Size = UDim2.new(0, 100, 0, 100)
            ColorWheel.Image = "rbxassetid://698052001"
            ColorWheel.MouseButton1Down:Connect(function()
                local inputConnection
                inputConnection = input.InputChanged:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseMovement then
                        local x = math.clamp(input.Position.X - ColorWheel.AbsolutePosition.X, 0, ColorWheel.AbsoluteSize.X) / ColorWheel.AbsoluteSize.X
                        local y = math.clamp(input.Position.Y - ColorWheel.AbsolutePosition.Y, 0, ColorWheel.AbsoluteSize.Y) / ColorWheel.AbsoluteSize.Y
                        hsv.h = x
                        hsv.s = y
                        updateColor()
                    end
                end)
                input.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        inputConnection:Disconnect()
                    end
                end)
            end)

            ColorWheelThumb.Name = "ColorWheelThumb"
            ColorWheelThumb.Parent = ColorWheel
            ColorWheelThumb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ColorWheelThumb.BackgroundTransparency = 1.000
            ColorWheelThumb.Size = UDim2.new(0, 10, 0, 10)
            ColorWheelThumb.Image = "rbxassetid://688003222"

            BrightnessBar.Name = "BrightnessBar"
            BrightnessBar.Parent = ColorPickerFrame
            BrightnessBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BrightnessBar.Position = UDim2.new(0.75, 0, 0.1, 0)
            BrightnessBar.Size = UDim2.new(0, 20, 0, 100)

            BrightnessFill.Name = "BrightnessFill"
            BrightnessFill.Parent = BrightnessBar
            BrightnessFill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BrightnessFill.Size = UDim2.new(1, 0, 1, 0)

            BrightnessThumb.Name = "BrightnessThumb"
            BrightnessThumb.Parent = BrightnessBar
            BrightnessThumb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            BrightnessThumb.BackgroundTransparency = 1.000
            BrightnessThumb.Position = UDim2.new(0, 0, 0.5, 0)
            BrightnessThumb.Size = UDim2.new(1, 0, 0, 10)
            BrightnessThumb.Image = "rbxassetid://688003222"
            BrightnessThumb.MouseButton1Down:Connect(function()
                local inputConnection
                inputConnection = input.InputChanged:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseMovement then
                        local y = math.clamp(input.Position.Y - BrightnessBar.AbsolutePosition.Y, 0, BrightnessBar.AbsoluteSize.Y) / BrightnessBar.AbsoluteSize.Y
                        hsv.v = 1 - y
                        updateColor()
                    end
                end)
                input.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        inputConnection:Disconnect()
                    end
                end)
            end)

            return ColorPicker
        end

        function Elements:NewLabel(title)
            local Label = Instance.new("TextLabel")
            local UICorner = Instance.new("UICorner")

            Label.Name = title
            Label.Parent = page
            Label.BackgroundColor3 = themeList.ElementColor
            Label.Size = UDim2.new(0, 335, 0, 30)
            Label.Font = Enum.Font.Gotham
            Label.Text = title
            Label.TextColor3 = themeList.TextColor
            Label.TextSize = 14.000

            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Label

            return Label
        end

        return Elements
    end

    return Tabs
end

return Kavo
